#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const readline = require("readline");

console.log("‚úÖ VibelyCoder starting...");

// üìÇ –°–æ–∑–¥–∞—ë–º –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã (–≤ AppData –Ω–∞ Windows)
const userDataPath = path.join(process.env.APPDATA || __dirname, "VibelyCoder");
if (!fs.existsSync(userDataPath)) {
  fs.mkdirSync(userDataPath, { recursive: true });
}

// üìÇ –ü—É—Ç–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
const keysFile = path.join(userDataPath, "keys.json");
const activatedFile = path.join(userDataPath, "activated.json");

// ‚úÖ –ï—Å–ª–∏ keys.json –µ—â—ë –Ω–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω ‚Üí —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –∏–∑ exe –≤ AppData
const originalKeysPath = path.join(__dirname, "keys.json");
if (!fs.existsSync(keysFile) && fs.existsSync(originalKeysPath)) {
  fs.copyFileSync(originalKeysPath, keysFile);
}

// ‚úÖ –ß–∏—Ç–∞–µ–º –∫–ª—é—á–∏
let validKeys = [];
if (fs.existsSync(keysFile)) {
  validKeys = JSON.parse(fs.readFileSync(keysFile, "utf-8"));
} else {
  console.log("‚ùå keys.json –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π —Ñ–∞–π–ª —Å –∫–ª—é—á–∞–º–∏.");
  process.exit(1);
}

// ‚úÖ –ï—Å–ª–∏ –∫–ª—é—á —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ —ç—Ç–æ–º –ü–ö ‚Äî —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º
if (fs.existsSync(activatedFile)) {
  console.log("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —ç—Ç–æ–º –ü–ö.");
  startApp();
} else {
  askLicense();
}

function askLicense() {
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });

  rl.question("üîë Enter your VibelyCoder License Key: ", function (key) {
    if (validKeys.includes(key)) {
      console.log("‚úÖ License activated! Welcome to VibelyCoder.");

      // –£–¥–∞–ª—è–µ–º –∫–ª—é—á –∏–∑ —Å–ø–∏—Å–∫–∞
      validKeys = validKeys.filter(k => k !== key);
      fs.writeFileSync(keysFile, JSON.stringify(validKeys, null, 2));

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é
      fs.writeFileSync(activatedFile, JSON.stringify({ key, date: new Date() }, null, 2));

      rl.close();
      startApp();
    } else {
      console.log("‚ùå Invalid license. Please restart and try again.");
      rl.close();
    }
  });
}

function startApp() {
  console.log("üöÄ App is now running!");
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });

  rl.question("üí¨ Type something for the AI: ", function (msg) {
    console.log("ü§ñ VibelyCoder: AI reply would go here.");
    rl.close();
  });
}
